<?xml version="1.0" encoding="utf-8"?>
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">
    <!-- Allocators -->
    <Type Name="Core::GlobalAllocator">
        <Expand>
            <Item Name="IsMovable">true</Item>
            <Item Name="IsCopyable">true</Item>
            <Item Name="OwnedByContainer">false</Item>
        </Expand>
    </Type>

    <Type Name="Core::ArenaAllocator&lt;*,*&gt;">
        <DisplayString>{{ size=$T1, alignment=$T2 }}</DisplayString>
        <Expand>
            <Item Name="IsMovable">false</Item>
            <Item Name="IsCopyable">false</Item>
            <Item Name="OwnedByContainer">false</Item>
        </Expand>
    </Type>

    <!-- Containers -->
    <!-- Vector -->
    <Type Name="Core::Vector&lt;*&gt;">
        <DisplayString>{{ size={Size_ - Mem_} }}</DisplayString>
        <Expand>
            <Item Name="[size]">Size_ - Mem_</Item>
            <Item Name="[capacity]">Capacity_ - Mem_</Item>
            <ArrayItems>
                <Size>Size_ - Mem_</Size>
                <ValuePointer>Mem_</ValuePointer>
            </ArrayItems>
        </Expand>
    </Type>

    <!-- Span -->
    <Type Name="Core::Span&lt;*,*&gt;">
        <Intrinsic Name="IsFixed" Expression="$T2 != -1" />
        <DisplayString Condition="!IsFixed()">{{ size={SpanSize_.N_} }}</DisplayString>
        <DisplayString Condition="IsFixed()">{{ size={$T2} }}</DisplayString>
        <Expand>
            <ArrayItems Condition="IsFixed()">
                <Size>$T2</Size>
                <ValuePointer>Data_</ValuePointer>
            </ArrayItems>
            <ArrayItems Condition="!IsFixed()">
                <Size>SpanSize_.N_</Size>
                <ValuePointer>Data_</ValuePointer>
            </ArrayItems>
        </Expand>
    </Type>

    <!-- Span specializations for character types -->
    <Type Name="Core::Span&lt;char,*&gt;">
        <Intrinsic Name="IsFixed" Expression="$T1 != -1" />
        <DisplayString Condition="!IsFixed()">{Data_,[SpanSize_.N_]}</DisplayString>
        <DisplayString Condition="IsFixed()">{Data_,[$T1]}</DisplayString>
        <StringView Condition="!IsFixed()">Data_,[SpanSize_.N_]</StringView>
        <StringView Condition="IsFixed()">Data_,[$T1]</StringView>
        <Expand>
            <Item Name="Size" Condition="IsFixed()">$T1</Item>
            <Item Name="Size" Condition="!IsFixed()">SpanSize_.N_</Item>
            <ArrayItems Condition="IsFixed()">
                <Size>$T1</Size>
                <ValuePointer>Data_</ValuePointer>
            </ArrayItems>
            <ArrayItems Condition="!IsFixed()">
                <Size>SpanSize_.N_</Size>
                <ValuePointer>Data_</ValuePointer>
            </ArrayItems>
        </Expand>
    </Type>

    <Type Name="Core::Span&lt;char const,*&gt;">
        <Intrinsic Name="IsFixed" Expression="$T1 != -1" />
        <DisplayString Condition="!IsFixed()">{Data_,[SpanSize_.N_]}</DisplayString>
        <DisplayString Condition="IsFixed()">{Data_,[$T1]}</DisplayString>
        <StringView Condition="!IsFixed()">Data_,[SpanSize_.N_]</StringView>
        <StringView Condition="IsFixed()">Data_,[$T1]</StringView>
        <Expand>
            <Item Name="Size" Condition="IsFixed()">$T1</Item>
            <Item Name="Size" Condition="!IsFixed()">SpanSize_.N_</Item>
            <ArrayItems Condition="IsFixed()">
                <Size>$T1</Size>
                <ValuePointer>Data_</ValuePointer>
            </ArrayItems>
            <ArrayItems Condition="!IsFixed()">
                <Size>SpanSize_.N_</Size>
                <ValuePointer>Data_</ValuePointer>
            </ArrayItems>
        </Expand>
    </Type>

    <Type Name="Core::Span&lt;wchar_t,*&gt;">
        <Intrinsic Name="IsFixed" Expression="$T1 != -1" />
        <DisplayString Condition="!IsFixed()">{Data_,[SpanSize_.N_]}</DisplayString>
        <DisplayString Condition="IsFixed()">{Data_,[$T1]}</DisplayString>
        <StringView Condition="!IsFixed()">Data_,[SpanSize_.N_]</StringView>
        <StringView Condition="IsFixed()">Data_,[$T1]</StringView>
        <Expand>
            <Item Name="Size" Condition="IsFixed()">$T1</Item>
            <Item Name="Size" Condition="!IsFixed()">SpanSize_.N_</Item>
            <ArrayItems Condition="IsFixed()">
                <Size>$T1</Size>
                <ValuePointer>Data_</ValuePointer>
            </ArrayItems>
            <ArrayItems Condition="!IsFixed()">
                <Size>SpanSize_.N_</Size>
                <ValuePointer>Data_</ValuePointer>
            </ArrayItems>
        </Expand>
    </Type>

    <Type Name="Core::Span&lt;wchar_t const,*&gt;">
        <Intrinsic Name="IsFixed" Expression="$T1 != -1" />
        <DisplayString Condition="!IsFixed()">{Data_,[SpanSize_.N_]}</DisplayString>
        <DisplayString Condition="IsFixed()">{Data_,[$T1]}</DisplayString>
        <StringView Condition="!IsFixed()">Data_,[SpanSize_.N_]</StringView>
        <StringView Condition="IsFixed()">Data_,[$T1]</StringView>
        <Expand>
            <Item Name="Size" Condition="IsFixed()">$T1</Item>
            <Item Name="Size" Condition="!IsFixed()">SpanSize_.N_</Item>
            <ArrayItems Condition="IsFixed()">
                <Size>$T1</Size>
                <ValuePointer>Data_</ValuePointer>
            </ArrayItems>
            <ArrayItems Condition="!IsFixed()">
                <Size>SpanSize_.N_</Size>
                <ValuePointer>Data_</ValuePointer>
            </ArrayItems>
        </Expand>
    </Type>

    <!-- FlatMap -->
    <Type Name="Core::FlatMap&lt;*,*&gt;">
        <DisplayString>{{ size={Keys_._size} }}</DisplayString>
        <Expand>
            <Item Name="[size]">Keys_._size</Item>
            <CustomListItems>
                <Variable Name="i" InitialValue="0"/>
                <Size>Keys_._size</Size>
                <Loop>
                    <Item Name="[{Keys_._data[i]}]">Values_._data[i]</Item>
                    <Exec>i++</Exec>
                </Loop>
            </CustomListItems>
        </Expand>
    </Type>

    <!-- CompactFlatMap -->
    <Type Name="Core::CompactFlatMap&lt;*,*&gt;">
        <DisplayString>{{ size={Items_._size} }}</DisplayString>
        <Expand>
            <Item Name="[size]">Items_._size</Item>
            <CustomListItems>
                <Variable Name="i" InitialValue="0"/>
                <Size>Items_._size</Size>
                <Loop>
                    <Item Name="[{Items_._data[i].Key_}]">Items_._data[i].Value_</Item>
                    <Exec>i++</Exec>
                </Loop>
            </CustomListItems>
        </Expand>
    </Type>

    <!-- Iterator visualizers -->
    <Type Name="Core::FlatMapIterator&lt;*,*&gt;">
        <DisplayString>{{ key={*Key_} value={*Value_} }}</DisplayString>
        <Expand>
            <Item Name="[key]">*Key_</Item>
            <Item Name="[value]">*Value_</Item>
        </Expand>
    </Type>

    <Type Name="Core::CompactFlatMapIterator&lt;*,*,*,*&gt;">
        <DisplayString>{{ ptr={Ptr_} }}</DisplayString>
        <Expand>
            <Item Name="[ptr]">Ptr_</Item>
        </Expand>
    </Type>

    <!-- Compound Types -->
    <Type Name="Core::CompactFlatMap&lt;*,*&gt;::KeyValue">
        <DisplayString>{{ {Key_} : {Value_} }}</DisplayString>
        <Expand>
            <Item Name="[key]">Key_</Item>
            <Item Name="[value]">Value_</Item>
        </Expand>
    </Type>
</AutoVisualizer>